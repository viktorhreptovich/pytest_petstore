{"uid":"1caa9359f5ecd62a","name":"Validation api deleting pet","fullName":"tests.test_validation_pet_api.TestSpecificationPetApi#test_delete_pet","historyId":"e23cf5ae4229ef86515e1bd733fb7073","time":{"start":1658247863327,"stop":1658247863774,"duration":447},"status":"failed","statusMessage":"AssertionError: [ResponseNotFound(http_status='200', responses=SpecPath('paths#/pet/{petId}#delete#responses'))]","statusTrace":"self = <tests.test_validation_pet_api.TestSpecificationPetApi object at 0x7fc948363130>\npet_api = <services.pet_api.PetApi object at 0x7fc948363400>\n\n    @allure.title('Validation api deleting pet')\n    def test_delete_pet(self, pet_api):\n        pet = generate_pet()\n        pet_api.add_pet(pet)\n    \n        result = pet_api.delete_pet(pet['id'])\n>       result.validate_specification_api()\n\ntests/test_validation_pet_api.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.request_result.RequestResult object at 0x7fc9483d0370>\n\n    def validate_specification_api(self):\n        api = f'{self.response.request.method} {self.response.request.url}'\n        with allure.step(f'Validate specification: {api}'):\n            request = RequestsOpenAPIRequest(self.response.request)\n            response = RequestsOpenAPIResponse(self.response)\n            validator = ResponseValidator(spec)\n            result = validator.validate(request, response)\n            if len(result.errors) > 0:\n>               raise AssertionError(result.errors)\nE               AssertionError: [ResponseNotFound(http_status='200', responses=SpecPath('paths#/pet/{petId}#delete#responses'))]\n\nutils/request_result.py:61: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1658247863198,"stop":1658247863313,"duration":115},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"pet_api","time":{"start":1658247863313,"stop":1658247863313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: [ResponseNotFound(http_status='200', responses=SpecPath('paths#/pet/{petId}#delete#responses'))]","statusTrace":"self = <tests.test_validation_pet_api.TestSpecificationPetApi object at 0x7fc948363130>\npet_api = <services.pet_api.PetApi object at 0x7fc948363400>\n\n    @allure.title('Validation api deleting pet')\n    def test_delete_pet(self, pet_api):\n        pet = generate_pet()\n        pet_api.add_pet(pet)\n    \n        result = pet_api.delete_pet(pet['id'])\n>       result.validate_specification_api()\n\ntests/test_validation_pet_api.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.request_result.RequestResult object at 0x7fc9483d0370>\n\n    def validate_specification_api(self):\n        api = f'{self.response.request.method} {self.response.request.url}'\n        with allure.step(f'Validate specification: {api}'):\n            request = RequestsOpenAPIRequest(self.response.request)\n            response = RequestsOpenAPIResponse(self.response)\n            validator = ResponseValidator(spec)\n            result = validator.validate(request, response)\n            if len(result.errors) > 0:\n>               raise AssertionError(result.errors)\nE               AssertionError: [ResponseNotFound(http_status='200', responses=SpecPath('paths#/pet/{petId}#delete#responses'))]\n\nutils/request_result.py:61: AssertionError","steps":[{"name":"Send request create pet","time":{"start":1658247863342,"stop":1658247863647,"duration":305},"status":"passed","steps":[],"attachments":[{"uid":"397918b7ace58520","name":"Request","source":"397918b7ace58520.txt","type":"text/plain","size":436},{"uid":"d380cc92c82a4d3b","name":"Response","source":"d380cc92c82a4d3b.txt","type":"text/plain","size":552}],"parameters":[{"name":"body","value":"{'id': 26801, 'category': {'id': 6, 'name': 'Oriya'}, 'name': 'Jacob', 'photoUrls': ['http://castaneda.com/'], 'tags': [{'id': 2, 'name': 'CornflowerBlue'}], 'status': 'available'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send request delete pet","time":{"start":1658247863647,"stop":1658247863736,"duration":89},"status":"passed","steps":[],"attachments":[{"uid":"43ed46b102388c04","name":"Request","source":"43ed46b102388c04.txt","type":"text/plain","size":263},{"uid":"6982165db983b798","name":"Response","source":"6982165db983b798.txt","type":"text/plain","size":424}],"parameters":[{"name":"pet_id","value":"26801"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Validate specification: DELETE https://petstore.swagger.io/v2/pet/26801","time":{"start":1658247863736,"stop":1658247863774,"duration":38},"status":"failed","statusMessage":"AssertionError: [ResponseNotFound(http_status='200', responses=SpecPath('paths#/pet/{petId}#delete#responses'))]\n","statusTrace":"  File \"/home/runner/work/pytest_petstore/pytest_petstore/utils/request_result.py\", line 61, in validate_specification_api\n    raise AssertionError(result.errors)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":4,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"suite","value":"API petstore specification validations"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestSpecificationPetApi"},{"name":"host","value":"fv-az201-726"},{"name":"thread","value":"2549-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_validation_pet_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"66be032e2445cf3f","reportUrl":"https://viktorhreptovich.github.io/pytest_petstore/1//#testresult/66be032e2445cf3f","status":"failed","statusDetails":"AssertionError: [ResponseNotFound(http_status='200', responses=SpecPath('paths#/pet/{petId}#delete#responses'))]","time":{"start":1658247669213,"stop":1658247669896,"duration":683}},{"uid":"bc899aae5a4d8d4b","reportUrl":"https://viktorhreptovich.github.io/pytest_petstore/1//#testresult/bc899aae5a4d8d4b","status":"failed","statusDetails":"AssertionError: [ResponseNotFound(http_status='200', responses=SpecPath('paths#/pet/{petId}#delete#responses'))]","time":{"start":1658247449696,"stop":1658247450242,"duration":546}}]},"tags":[]},"source":"1caa9359f5ecd62a.json","parameterValues":[]}